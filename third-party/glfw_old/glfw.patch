--- BUILD.bazel
+++ BUILD.bazel
@@ -1,33 +1,143 @@
 load("@io_bazel_rules_go//go:def.bzl", "go_library")
 
-go_library(
-    name = "glfw",
+WIN32_DEFINES = [
+    "_GLFW_WIN32",
+]
+
+WIN32_HDRS = [
+    "glfw/src/win32_joystick.h",
+    "glfw/src/win32_platform.h",
+    "glfw/src/wgl_context.h", 
+]
+
+WIN32_SRCS = [
+    "glfw/src/win32_init.c",
+    "glfw/src/win32_joystick.c",
+    "glfw/src/win32_monitor.c",
+    "glfw/src/win32_thread.c",
+    "glfw/src/win32_time.c",
+    "glfw/src/win32_window.c",
+    "glfw/src/wgl_context.c",
+]
+
+WIN32_LINKOPTS = [
+    "-DEFAULTLIB:user32.lib",
+    "-DEFAULTLIB:gdi32.lib",
+    "-DEFAULTLIB:shell32.lib",
+]
+
+LINUX_DEFINES = [
+    "_GLFW_HAS_XF86VM",
+    "_GLFW_X11",
+]
+
+LINUX_HDRS = [
+    "glfw/src/glx_context.h",
+    "glfw/src/linux_joystick.h",
+    "glfw/src/posix_thread.h",
+    "glfw/src/posix_time.h",
+    "glfw/src/x11_platform.h",
+]
+
+LINUX_SRCS = [
+    "glfw/src/glx_context.c",
+    "glfw/src/linux_joystick.c",
+    "glfw/src/posix_thread.c",
+    "glfw/src/posix_time.c",
+    "glfw/src/x11_init.c",
+    "glfw/src/x11_monitor.c",
+    "glfw/src/x11_window.c",
+]
+
+LINUX_LINKOPTS = []
+
+DARWIN_DEFINES = [
+    "_GLFW_COCOA",
+    "_GLFW_NSGL",
+    "_GLFW_NO_DLOAD_WINMM",
+    "_GLFW_USE_OPENGL",
+]
+
+DARWIN_HDRS = [
+    "glfw/src/cocoa_joystick.h",
+    "glfw/src/cocoa_platform.h",
+    "glfw/src/glx_context.h",
+    "glfw/src/nsgl_context.h",
+    "glfw/src/null_joystick.h",
+    "glfw/src/null_platform.h",
+    "glfw/src/posix_thread.h",
+    "glfw/src/wl_platform.h",
+]
+
+DARWIN_SRCS = [
+    "glfw/src/cocoa_time.c",
+    "glfw/src/posix_thread.c",
+]
+
+DARWIN_LINKOPTS = [
+    "-framework OpenGL",
+    "-framework Cocoa",
+    "-framework IOKit",
+    "-framework CoreFoundation"
+]
+
+cc_library(
+    name = "glfw_src",
+    hdrs = [
+        "glfw/include/GLFW/glfw3.h",
+        "glfw/include/GLFW/glfw3native.h",
+        "glfw/src/egl_context.h",
+        "glfw/src/internal.h",
+        "glfw/src/osmesa_context.h",
+        "glfw/src/mappings.h",
+        "glfw/src/xkb_unicode.h",
+    ] + select({
+		"@bazel_tools//src/conditions:windows": WIN32_HDRS,
+		"@bazel_tools//src/conditions:linux_x86_64": LINUX_HDRS,
+        "@bazel_tools//src/conditions:darwin_x86_64": DARWIN_HDRS,
+	}),
     srcs = [
-        "build.go",
-        "c_glfw.go",
-        "c_glfw_bsd.go",
-        "c_glfw_darwin.go",
-        "c_glfw_lin.go",
-        "c_glfw_windows.go",
-        "context.go",
-        "error.c",
-        "error.go",
-        "glfw.go",
-        "glfw_tree_rebuild.go",
-        "input.c",
-        "input.go",
-        "monitor.c",
-        "monitor.go",
-        "native_darwin.go",
-        "native_linbsd.go",
-        "native_windows.go",
-        "time.go",
-        "util.go",
-        "vulkan.go",
-        "window.c",
-        "window.go",
+        "glfw/src/context.c",
+        "glfw/src/egl_context.c",
+        "glfw/src/init.c",
+        "glfw/src/input.c",
+        "glfw/src/osmesa_context.c",
+        "glfw/src/monitor.c",
+        "glfw/src/vulkan.c",
+        "glfw/src/window.c",
+        "glfw/src/xkb_unicode.c",
+    ] + select({
+		"@bazel_tools//src/conditions:windows": WIN32_SRCS,
+		"@bazel_tools//src/conditions:linux_x86_64": LINUX_SRCS,
+        "@bazel_tools//src/conditions:darwin_x86_64": DARWIN_SRCS,
+	}),
+    defines = select({
+		"@bazel_tools//src/conditions:windows": WIN32_DEFINES,
+		"@bazel_tools//src/conditions:linux_x86_64": LINUX_DEFINES,
+        "@bazel_tools//src/conditions:darwin_x86_64": DARWIN_DEFINES,
+	}),
+)
+
+cc_library(
+    name = "glfw_c",
+    hdrs = [
+        "glfw/include/GLFW/glfw3.h",
+        "glfw/include/GLFW/glfw3native.h",
     ],
+    linkopts = select({
+		"@bazel_tools//src/conditions:windows": WIN32_LINKOPTS,
+		"@bazel_tools//src/conditions:linux_x86_64": LINUX_LINKOPTS,
+        "@bazel_tools//src/conditions:darwin_x86_64": DARWIN_LINKOPTS,
+	}),
+    deps = [":glfw_src"],
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "glfw",
+    srcs = glob(["*.c", "*.go"]),
     cgo = True,
+    cdeps = [":glfw_c"], # keep
     clinkopts = select({
         "@io_bazel_rules_go//go/platform:android": [
             "-lGL",
