// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.0
// source: api/server_external.proto

package server_external

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Regime int32

const (
	Regime_SQUAD      Regime = 0
	Regime_DEATHMATCH Regime = 1
)

// Enum value maps for Regime.
var (
	Regime_name = map[int32]string{
		0: "SQUAD",
		1: "DEATHMATCH",
	}
	Regime_value = map[string]int32{
		"SQUAD":      0,
		"DEATHMATCH": 1,
	}
)

func (x Regime) Enum() *Regime {
	p := new(Regime)
	*p = x
	return p
}

func (x Regime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Regime) Descriptor() protoreflect.EnumDescriptor {
	return file_api_server_external_proto_enumTypes[0].Descriptor()
}

func (Regime) Type() protoreflect.EnumType {
	return &file_api_server_external_proto_enumTypes[0]
}

func (x Regime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Regime.Descriptor instead.
func (Regime) EnumDescriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{0}
}

type Archievement int32

const (
	Archievement_TenKills Archievement = 0
)

// Enum value maps for Archievement.
var (
	Archievement_name = map[int32]string{
		0: "TenKills",
	}
	Archievement_value = map[string]int32{
		"TenKills": 0,
	}
)

func (x Archievement) Enum() *Archievement {
	p := new(Archievement)
	*p = x
	return p
}

func (x Archievement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Archievement) Descriptor() protoreflect.EnumDescriptor {
	return file_api_server_external_proto_enumTypes[1].Descriptor()
}

func (Archievement) Type() protoreflect.EnumType {
	return &file_api_server_external_proto_enumTypes[1]
}

func (x Archievement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Archievement.Descriptor instead.
func (Archievement) EnumDescriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{1}
}

type World struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GameSettings *GameSettings `protobuf:"bytes,2,opt,name=gameSettings,proto3" json:"gameSettings,omitempty"`
}

func (x *World) Reset() {
	*x = World{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{0}
}

func (x *World) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *World) GetGameSettings() *GameSettings {
	if x != nil {
		return x.GameSettings
	}
	return nil
}

type GameSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regime        Regime `protobuf:"varint,1,opt,name=regime,proto3,enum=Regime" json:"regime,omitempty"`
	IsGameStarted bool   `protobuf:"varint,2,opt,name=isGameStarted,proto3" json:"isGameStarted,omitempty"`
	IsWorldExist  bool   `protobuf:"varint,3,opt,name=isWorldExist,proto3" json:"isWorldExist,omitempty"`
	AFKTimeout    int64  `protobuf:"varint,4,opt,name=AFKTimeout,proto3" json:"AFKTimeout,omitempty"`
}

func (x *GameSettings) Reset() {
	*x = GameSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSettings) ProtoMessage() {}

func (x *GameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSettings.ProtoReflect.Descriptor instead.
func (*GameSettings) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{1}
}

func (x *GameSettings) GetRegime() Regime {
	if x != nil {
		return x.Regime
	}
	return Regime_SQUAD
}

func (x *GameSettings) GetIsGameStarted() bool {
	if x != nil {
		return x.IsGameStarted
	}
	return false
}

func (x *GameSettings) GetIsWorldExist() bool {
	if x != nil {
		return x.IsWorldExist
	}
	return false
}

func (x *GameSettings) GetAFKTimeout() int64 {
	if x != nil {
		return x.AFKTimeout
	}
	return 0
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *Base          `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Spawns []*PositionInt `protobuf:"bytes,2,rep,name=spawns,proto3" json:"spawns,omitempty"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{2}
}

func (x *Map) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Map) GetSpawns() []*PositionInt {
	if x != nil {
		return x.Spawns
	}
	return nil
}

type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{3}
}

func (x *Element) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type Weapon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *Base  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Radius string `protobuf:"bytes,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *Weapon) Reset() {
	*x = Weapon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weapon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weapon) ProtoMessage() {}

func (x *Weapon) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weapon.ProtoReflect.Descriptor instead.
func (*Weapon) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{4}
}

func (x *Weapon) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Weapon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Weapon) GetRadius() string {
	if x != nil {
		return x.Radius
	}
	return ""
}

type Ammo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Direction int64 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Ammo) Reset() {
	*x = Ammo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ammo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ammo) ProtoMessage() {}

func (x *Ammo) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ammo.ProtoReflect.Descriptor instead.
func (*Ammo) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{5}
}

func (x *Ammo) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Ammo) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

type PC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *Base  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Health       uint64 `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	LobbyNumber  int64  `protobuf:"varint,4,opt,name=lobbyNumber,proto3" json:"lobbyNumber,omitempty"`
	LastActivity int64  `protobuf:"varint,5,opt,name=lastActivity,proto3" json:"lastActivity,omitempty"`
}

func (x *PC) Reset() {
	*x = PC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PC) ProtoMessage() {}

func (x *PC) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PC.ProtoReflect.Descriptor instead.
func (*PC) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{6}
}

func (x *PC) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PC) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PC) GetHealth() uint64 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *PC) GetLobbyNumber() int64 {
	if x != nil {
		return x.LobbyNumber
	}
	return 0
}

func (x *PC) GetLastActivity() int64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

type Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Animation *Animation   `protobuf:"bytes,1,opt,name=animation,proto3" json:"animation,omitempty"`
	Skin      *Skin        `protobuf:"bytes,2,opt,name=skin,proto3" json:"skin,omitempty"`
	Physics   *Physics     `protobuf:"bytes,3,opt,name=physics,proto3" json:"physics,omitempty"`
	Parent    *Base        `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Id        string       `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	RawPos    *Position    `protobuf:"bytes,6,opt,name=rawPos,proto3" json:"rawPos,omitempty"`
	Spawn     *PositionInt `protobuf:"bytes,7,opt,name=spawn,proto3" json:"spawn,omitempty"`
	Direction int64        `protobuf:"varint,8,opt,name=direction,proto3" json:"direction,omitempty"`
	Role      int64        `protobuf:"varint,9,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *Base) Reset() {
	*x = Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{7}
}

func (x *Base) GetAnimation() *Animation {
	if x != nil {
		return x.Animation
	}
	return nil
}

func (x *Base) GetSkin() *Skin {
	if x != nil {
		return x.Skin
	}
	return nil
}

func (x *Base) GetPhysics() *Physics {
	if x != nil {
		return x.Physics
	}
	return nil
}

func (x *Base) GetParent() *Base {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Base) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Base) GetRawPos() *Position {
	if x != nil {
		return x.RawPos
	}
	return nil
}

func (x *Base) GetSpawn() *PositionInt {
	if x != nil {
		return x.Spawn
	}
	return nil
}

func (x *Base) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *Base) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

type Animation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionBeforeAnimation *Position `protobuf:"bytes,1,opt,name=positionBeforeAnimation,proto3" json:"positionBeforeAnimation,omitempty"`
	FrameCount              uint64    `protobuf:"varint,2,opt,name=frameCount,proto3" json:"frameCount,omitempty"`
	FrameDelayCounter       uint64    `protobuf:"varint,3,opt,name=frameDelayCounter,proto3" json:"frameDelayCounter,omitempty"`
	CurrentFrameMatrix      []float64 `protobuf:"fixed64,4,rep,packed,name=currentFrameMatrix,proto3" json:"currentFrameMatrix,omitempty"`
}

func (x *Animation) Reset() {
	*x = Animation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Animation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Animation) ProtoMessage() {}

func (x *Animation) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Animation.ProtoReflect.Descriptor instead.
func (*Animation) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{8}
}

func (x *Animation) GetPositionBeforeAnimation() *Position {
	if x != nil {
		return x.PositionBeforeAnimation
	}
	return nil
}

func (x *Animation) GetFrameCount() uint64 {
	if x != nil {
		return x.FrameCount
	}
	return 0
}

func (x *Animation) GetFrameDelayCounter() uint64 {
	if x != nil {
		return x.FrameDelayCounter
	}
	return 0
}

func (x *Animation) GetCurrentFrameMatrix() []float64 {
	if x != nil {
		return x.CurrentFrameMatrix
	}
	return nil
}

type Skin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Skin) Reset() {
	*x = Skin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skin) ProtoMessage() {}

func (x *Skin) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skin.ProtoReflect.Descriptor instead.
func (*Skin) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{9}
}

func (x *Skin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skin) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Physics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jump []int64 `protobuf:"varint,1,rep,packed,name=jump,proto3" json:"jump,omitempty"`
}

func (x *Physics) Reset() {
	*x = Physics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Physics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Physics) ProtoMessage() {}

func (x *Physics) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Physics.ProtoReflect.Descriptor instead.
func (*Physics) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{10}
}

func (x *Physics) GetJump() []int64 {
	if x != nil {
		return x.Jump
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{11}
}

func (x *Position) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PositionInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int64 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PositionInt) Reset() {
	*x = PositionInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionInt) ProtoMessage() {}

func (x *PositionInt) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionInt.ProtoReflect.Descriptor instead.
func (*PositionInt) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{12}
}

func (x *PositionInt) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PositionInt) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type RemovePCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId string `protobuf:"bytes,1,opt,name=worldId,proto3" json:"worldId,omitempty"`
	PcId    string `protobuf:"bytes,2,opt,name=pcId,proto3" json:"pcId,omitempty"`
}

func (x *RemovePCRequest) Reset() {
	*x = RemovePCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePCRequest) ProtoMessage() {}

func (x *RemovePCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePCRequest.ProtoReflect.Descriptor instead.
func (*RemovePCRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{13}
}

func (x *RemovePCRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *RemovePCRequest) GetPcId() string {
	if x != nil {
		return x.PcId
	}
	return ""
}

type IsGameStartedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Started bool `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
}

func (x *IsGameStartedResponse) Reset() {
	*x = IsGameStartedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsGameStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsGameStartedResponse) ProtoMessage() {}

func (x *IsGameStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsGameStartedResponse.ProtoReflect.Descriptor instead.
func (*IsGameStartedResponse) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{14}
}

func (x *IsGameStartedResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type GetWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	World    *World     `protobuf:"bytes,1,opt,name=world,proto3" json:"world,omitempty"`
	PCs      []*PC      `protobuf:"bytes,2,rep,name=PCs,proto3" json:"PCs,omitempty"`
	Elements []*Element `protobuf:"bytes,3,rep,name=elements,proto3" json:"elements,omitempty"`
	Weapons  []*Weapon  `protobuf:"bytes,4,rep,name=weapons,proto3" json:"weapons,omitempty"`
	Ammos    []*Ammo    `protobuf:"bytes,5,rep,name=ammos,proto3" json:"ammos,omitempty"`
}

func (x *GetWorldResponse) Reset() {
	*x = GetWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorldResponse) ProtoMessage() {}

func (x *GetWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorldResponse.ProtoReflect.Descriptor instead.
func (*GetWorldResponse) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{15}
}

func (x *GetWorldResponse) GetWorld() *World {
	if x != nil {
		return x.World
	}
	return nil
}

func (x *GetWorldResponse) GetPCs() []*PC {
	if x != nil {
		return x.PCs
	}
	return nil
}

func (x *GetWorldResponse) GetElements() []*Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *GetWorldResponse) GetWeapons() []*Weapon {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *GetWorldResponse) GetAmmos() []*Ammo {
	if x != nil {
		return x.Ammos
	}
	return nil
}

type DeletePCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePCRequest) Reset() {
	*x = DeletePCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePCRequest) ProtoMessage() {}

func (x *DeletePCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePCRequest.ProtoReflect.Descriptor instead.
func (*DeletePCRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePCRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AssignRandomSpawnsToPCsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId string      `protobuf:"bytes,1,opt,name=worldId,proto3" json:"worldId,omitempty"`
	Spawns  []*Position `protobuf:"bytes,2,rep,name=spawns,proto3" json:"spawns,omitempty"`
}

func (x *AssignRandomSpawnsToPCsRequest) Reset() {
	*x = AssignRandomSpawnsToPCsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRandomSpawnsToPCsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRandomSpawnsToPCsRequest) ProtoMessage() {}

func (x *AssignRandomSpawnsToPCsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRandomSpawnsToPCsRequest.ProtoReflect.Descriptor instead.
func (*AssignRandomSpawnsToPCsRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{17}
}

func (x *AssignRandomSpawnsToPCsRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *AssignRandomSpawnsToPCsRequest) GetSpawns() []*Position {
	if x != nil {
		return x.Spawns
	}
	return nil
}

type UnlockArchievementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcId         string       `protobuf:"bytes,1,opt,name=pcId,proto3" json:"pcId,omitempty"`
	Archievement Archievement `protobuf:"varint,2,opt,name=archievement,proto3,enum=Archievement" json:"archievement,omitempty"`
}

func (x *UnlockArchievementRequest) Reset() {
	*x = UnlockArchievementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockArchievementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockArchievementRequest) ProtoMessage() {}

func (x *UnlockArchievementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockArchievementRequest.ProtoReflect.Descriptor instead.
func (*UnlockArchievementRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{18}
}

func (x *UnlockArchievementRequest) GetPcId() string {
	if x != nil {
		return x.PcId
	}
	return ""
}

func (x *UnlockArchievementRequest) GetArchievement() Archievement {
	if x != nil {
		return x.Archievement
	}
	return Archievement_TenKills
}

type GetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KillsNum int64 `protobuf:"varint,1,opt,name=killsNum,proto3" json:"killsNum,omitempty"`
}

func (x *GetStatisticsResponse) Reset() {
	*x = GetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsResponse) ProtoMessage() {}

func (x *GetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{19}
}

func (x *GetStatisticsResponse) GetKillsNum() int64 {
	if x != nil {
		return x.KillsNum
	}
	return 0
}

type InsertOrUpdateCooldownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId string `protobuf:"bytes,1,opt,name=worldId,proto3" json:"worldId,omitempty"`
	PcId    string `protobuf:"bytes,2,opt,name=pcId,proto3" json:"pcId,omitempty"`
}

func (x *InsertOrUpdateCooldownRequest) Reset() {
	*x = InsertOrUpdateCooldownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertOrUpdateCooldownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertOrUpdateCooldownRequest) ProtoMessage() {}

func (x *InsertOrUpdateCooldownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertOrUpdateCooldownRequest.ProtoReflect.Descriptor instead.
func (*InsertOrUpdateCooldownRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{20}
}

func (x *InsertOrUpdateCooldownRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *InsertOrUpdateCooldownRequest) GetPcId() string {
	if x != nil {
		return x.PcId
	}
	return ""
}

type FindCooldownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId string `protobuf:"bytes,1,opt,name=worldId,proto3" json:"worldId,omitempty"`
	PcId    string `protobuf:"bytes,2,opt,name=pcId,proto3" json:"pcId,omitempty"`
}

func (x *FindCooldownRequest) Reset() {
	*x = FindCooldownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCooldownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCooldownRequest) ProtoMessage() {}

func (x *FindCooldownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCooldownRequest.ProtoReflect.Descriptor instead.
func (*FindCooldownRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{21}
}

func (x *FindCooldownRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *FindCooldownRequest) GetPcId() string {
	if x != nil {
		return x.PcId
	}
	return ""
}

type DeleteCooldownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldId string `protobuf:"bytes,1,opt,name=worldId,proto3" json:"worldId,omitempty"`
	PcId    string `protobuf:"bytes,2,opt,name=pcId,proto3" json:"pcId,omitempty"`
}

func (x *DeleteCooldownRequest) Reset() {
	*x = DeleteCooldownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_server_external_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCooldownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCooldownRequest) ProtoMessage() {}

func (x *DeleteCooldownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_server_external_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCooldownRequest.ProtoReflect.Descriptor instead.
func (*DeleteCooldownRequest) Descriptor() ([]byte, []int) {
	return file_api_server_external_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteCooldownRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *DeleteCooldownRequest) GetPcId() string {
	if x != nil {
		return x.PcId
	}
	return ""
}

var File_api_server_external_proto protoreflect.FileDescriptor

var file_api_server_external_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x31, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x73, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x46, 0x4b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x46, 0x4b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x46, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4f,
	0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22,
	0x3f, 0x0a, 0x04, 0x41, 0x6d, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x99, 0x01, 0x0a, 0x02, 0x50, 0x43, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x97, 0x02, 0x0a,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x53, 0x6b, 0x69, 0x6e, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x73, 0x52, 0x07, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x73, 0x12, 0x1d,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x06, 0x72, 0x61, 0x77, 0x50, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x61, 0x77, 0x50, 0x6f, 0x73,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x17, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x17, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x22, 0x2e, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1d, 0x0a, 0x07, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x29,
	0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x22, 0x3f, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x63, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x49, 0x73,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0xad, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x12, 0x15, 0x0a, 0x03, 0x50, 0x43, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x03, 0x2e,
	0x50, 0x43, 0x52, 0x03, 0x50, 0x43, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73,
	0x12, 0x1b, 0x0a, 0x05, 0x61, 0x6d, 0x6d, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x05, 0x61, 0x6d, 0x6d, 0x6f, 0x73, 0x22, 0x21, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x5d, 0x0a, 0x1e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x53, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x54, 0x6f, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x06,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x22,
	0x62, 0x0a, 0x19, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x63, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x4e, 0x75, 0x6d, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x05, 0x22, 0x4d,
	0x0a, 0x1d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x63, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x13, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x63,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x63, 0x49, 0x64, 0x2a, 0x23, 0x0a, 0x06, 0x52, 0x65, 0x67,
	0x69, 0x6d, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x51, 0x55, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x45, 0x41, 0x54, 0x48, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x2a, 0x1c,
	0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x65, 0x6e, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x10, 0x00, 0x32, 0xb4, 0x08, 0x0a,
	0x15, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x06, 0x2e,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a,
	0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x04, 0x2e, 0x4d, 0x61, 0x70, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x2f, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x43, 0x12, 0x03, 0x2e, 0x50, 0x43, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x39, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x08, 0x2e, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x14,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x12, 0x07, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6d, 0x6f, 0x12, 0x05, 0x2e, 0x41, 0x6d,
	0x6d, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x16, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1e, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x40, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x43, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6f,
	0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x16, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x17, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x73, 0x54, 0x6f, 0x50, 0x43, 0x73, 0x12, 0x1f, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x73, 0x54, 0x6f, 0x50,
	0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_server_external_proto_rawDescOnce sync.Once
	file_api_server_external_proto_rawDescData = file_api_server_external_proto_rawDesc
)

func file_api_server_external_proto_rawDescGZIP() []byte {
	file_api_server_external_proto_rawDescOnce.Do(func() {
		file_api_server_external_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_server_external_proto_rawDescData)
	})
	return file_api_server_external_proto_rawDescData
}

var file_api_server_external_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_server_external_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_server_external_proto_goTypes = []interface{}{
	(Regime)(0),                            // 0: Regime
	(Archievement)(0),                      // 1: Archievement
	(*World)(nil),                          // 2: World
	(*GameSettings)(nil),                   // 3: GameSettings
	(*Map)(nil),                            // 4: Map
	(*Element)(nil),                        // 5: Element
	(*Weapon)(nil),                         // 6: Weapon
	(*Ammo)(nil),                           // 7: Ammo
	(*PC)(nil),                             // 8: PC
	(*Base)(nil),                           // 9: Base
	(*Animation)(nil),                      // 10: Animation
	(*Skin)(nil),                           // 11: Skin
	(*Physics)(nil),                        // 12: Physics
	(*Position)(nil),                       // 13: Position
	(*PositionInt)(nil),                    // 14: PositionInt
	(*RemovePCRequest)(nil),                // 15: RemovePCRequest
	(*IsGameStartedResponse)(nil),          // 16: IsGameStartedResponse
	(*GetWorldResponse)(nil),               // 17: GetWorldResponse
	(*DeletePCRequest)(nil),                // 18: DeletePCRequest
	(*AssignRandomSpawnsToPCsRequest)(nil), // 19: AssignRandomSpawnsToPCsRequest
	(*UnlockArchievementRequest)(nil),      // 20: UnlockArchievementRequest
	(*GetStatisticsResponse)(nil),          // 21: GetStatisticsResponse
	(*InsertOrUpdateCooldownRequest)(nil),  // 22: InsertOrUpdateCooldownRequest
	(*FindCooldownRequest)(nil),            // 23: FindCooldownRequest
	(*DeleteCooldownRequest)(nil),          // 24: DeleteCooldownRequest
	(*wrapperspb.StringValue)(nil),         // 25: google.protobuf.StringValue
	(*emptypb.Empty)(nil),                  // 26: google.protobuf.Empty
	(*wrapperspb.BoolValue)(nil),           // 27: google.protobuf.BoolValue
}
var file_api_server_external_proto_depIdxs = []int32{
	3,  // 0: World.gameSettings:type_name -> GameSettings
	0,  // 1: GameSettings.regime:type_name -> Regime
	9,  // 2: Map.base:type_name -> Base
	14, // 3: Map.spawns:type_name -> PositionInt
	9,  // 4: Element.base:type_name -> Base
	9,  // 5: Weapon.base:type_name -> Base
	9,  // 6: Ammo.base:type_name -> Base
	9,  // 7: PC.base:type_name -> Base
	10, // 8: Base.animation:type_name -> Animation
	11, // 9: Base.skin:type_name -> Skin
	12, // 10: Base.physics:type_name -> Physics
	9,  // 11: Base.parent:type_name -> Base
	13, // 12: Base.rawPos:type_name -> Position
	14, // 13: Base.spawn:type_name -> PositionInt
	13, // 14: Animation.positionBeforeAnimation:type_name -> Position
	2,  // 15: GetWorldResponse.world:type_name -> World
	8,  // 16: GetWorldResponse.PCs:type_name -> PC
	5,  // 17: GetWorldResponse.elements:type_name -> Element
	6,  // 18: GetWorldResponse.weapons:type_name -> Weapon
	7,  // 19: GetWorldResponse.ammos:type_name -> Ammo
	13, // 20: AssignRandomSpawnsToPCsRequest.spawns:type_name -> Position
	1,  // 21: UnlockArchievementRequest.archievement:type_name -> Archievement
	2,  // 22: ExternalServerService.InsertOrUpdateWorld:input_type -> World
	4,  // 23: ExternalServerService.InsertOrUpdateMap:input_type -> Map
	8,  // 24: ExternalServerService.InsertOrUpdatePC:input_type -> PC
	5,  // 25: ExternalServerService.InsertOrUpdateElement:input_type -> Element
	6,  // 26: ExternalServerService.InsertOrUpdateWeapon:input_type -> Weapon
	7,  // 27: ExternalServerService.InsertOrUpdateAmmo:input_type -> Ammo
	22, // 28: ExternalServerService.InsertOrUpdateCooldown:input_type -> InsertOrUpdateCooldownRequest
	25, // 29: ExternalServerService.DeleteWorld:input_type -> google.protobuf.StringValue
	25, // 30: ExternalServerService.DeletePC:input_type -> google.protobuf.StringValue
	24, // 31: ExternalServerService.DeleteCooldown:input_type -> DeleteCooldownRequest
	25, // 32: ExternalServerService.FindWorldObjects:input_type -> google.protobuf.StringValue
	23, // 33: ExternalServerService.FindCooldown:input_type -> FindCooldownRequest
	25, // 34: ExternalServerService.GetStatistics:input_type -> google.protobuf.StringValue
	25, // 35: ExternalServerService.IsArchievementUnlocked:input_type -> google.protobuf.StringValue
	20, // 36: ExternalServerService.UnlockArchievement:input_type -> UnlockArchievementRequest
	19, // 37: ExternalServerService.AssignRandomSpawnsToPCs:input_type -> AssignRandomSpawnsToPCsRequest
	26, // 38: ExternalServerService.InsertOrUpdateWorld:output_type -> google.protobuf.Empty
	26, // 39: ExternalServerService.InsertOrUpdateMap:output_type -> google.protobuf.Empty
	26, // 40: ExternalServerService.InsertOrUpdatePC:output_type -> google.protobuf.Empty
	26, // 41: ExternalServerService.InsertOrUpdateElement:output_type -> google.protobuf.Empty
	26, // 42: ExternalServerService.InsertOrUpdateWeapon:output_type -> google.protobuf.Empty
	26, // 43: ExternalServerService.InsertOrUpdateAmmo:output_type -> google.protobuf.Empty
	26, // 44: ExternalServerService.InsertOrUpdateCooldown:output_type -> google.protobuf.Empty
	26, // 45: ExternalServerService.DeleteWorld:output_type -> google.protobuf.Empty
	26, // 46: ExternalServerService.DeletePC:output_type -> google.protobuf.Empty
	26, // 47: ExternalServerService.DeleteCooldown:output_type -> google.protobuf.Empty
	17, // 48: ExternalServerService.FindWorldObjects:output_type -> GetWorldResponse
	27, // 49: ExternalServerService.FindCooldown:output_type -> google.protobuf.BoolValue
	21, // 50: ExternalServerService.GetStatistics:output_type -> GetStatisticsResponse
	26, // 51: ExternalServerService.IsArchievementUnlocked:output_type -> google.protobuf.Empty
	26, // 52: ExternalServerService.UnlockArchievement:output_type -> google.protobuf.Empty
	26, // 53: ExternalServerService.AssignRandomSpawnsToPCs:output_type -> google.protobuf.Empty
	38, // [38:54] is the sub-list for method output_type
	22, // [22:38] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_api_server_external_proto_init() }
func file_api_server_external_proto_init() {
	if File_api_server_external_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_server_external_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*World); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weapon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ammo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Animation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Physics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsGameStartedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRandomSpawnsToPCsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockArchievementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertOrUpdateCooldownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCooldownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_server_external_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCooldownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_server_external_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_server_external_proto_goTypes,
		DependencyIndexes: file_api_server_external_proto_depIdxs,
		EnumInfos:         file_api_server_external_proto_enumTypes,
		MessageInfos:      file_api_server_external_proto_msgTypes,
	}.Build()
	File_api_server_external_proto = out.File
	file_api_server_external_proto_rawDesc = nil
	file_api_server_external_proto_goTypes = nil
	file_api_server_external_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExternalServerServiceClient is the client API for ExternalServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExternalServerServiceClient interface {
	InsertOrUpdateWorld(ctx context.Context, in *World, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdateMap(ctx context.Context, in *Map, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdatePC(ctx context.Context, in *PC, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdateElement(ctx context.Context, in *Element, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdateWeapon(ctx context.Context, in *Weapon, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdateAmmo(ctx context.Context, in *Ammo, opts ...grpc.CallOption) (*emptypb.Empty, error)
	InsertOrUpdateCooldown(ctx context.Context, in *InsertOrUpdateCooldownRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteWorld(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeletePC(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteCooldown(ctx context.Context, in *DeleteCooldownRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	FindWorldObjects(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*GetWorldResponse, error)
	FindCooldown(ctx context.Context, in *FindCooldownRequest, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error)
	GetStatistics(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*GetStatisticsResponse, error)
	IsArchievementUnlocked(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UnlockArchievement(ctx context.Context, in *UnlockArchievementRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AssignRandomSpawnsToPCs(ctx context.Context, in *AssignRandomSpawnsToPCsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type externalServerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExternalServerServiceClient(cc grpc.ClientConnInterface) ExternalServerServiceClient {
	return &externalServerServiceClient{cc}
}

func (c *externalServerServiceClient) InsertOrUpdateWorld(ctx context.Context, in *World, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdateMap(ctx context.Context, in *Map, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdatePC(ctx context.Context, in *PC, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdatePC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdateElement(ctx context.Context, in *Element, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdateWeapon(ctx context.Context, in *Weapon, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateWeapon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdateAmmo(ctx context.Context, in *Ammo, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateAmmo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) InsertOrUpdateCooldown(ctx context.Context, in *InsertOrUpdateCooldownRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/InsertOrUpdateCooldown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) DeleteWorld(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/DeleteWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) DeletePC(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/DeletePC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) DeleteCooldown(ctx context.Context, in *DeleteCooldownRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/DeleteCooldown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) FindWorldObjects(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*GetWorldResponse, error) {
	out := new(GetWorldResponse)
	err := c.cc.Invoke(ctx, "/ExternalServerService/FindWorldObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) FindCooldown(ctx context.Context, in *FindCooldownRequest, opts ...grpc.CallOption) (*wrapperspb.BoolValue, error) {
	out := new(wrapperspb.BoolValue)
	err := c.cc.Invoke(ctx, "/ExternalServerService/FindCooldown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) GetStatistics(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*GetStatisticsResponse, error) {
	out := new(GetStatisticsResponse)
	err := c.cc.Invoke(ctx, "/ExternalServerService/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) IsArchievementUnlocked(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/IsArchievementUnlocked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) UnlockArchievement(ctx context.Context, in *UnlockArchievementRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/UnlockArchievement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalServerServiceClient) AssignRandomSpawnsToPCs(ctx context.Context, in *AssignRandomSpawnsToPCsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ExternalServerService/AssignRandomSpawnsToPCs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalServerServiceServer is the server API for ExternalServerService service.
type ExternalServerServiceServer interface {
	InsertOrUpdateWorld(context.Context, *World) (*emptypb.Empty, error)
	InsertOrUpdateMap(context.Context, *Map) (*emptypb.Empty, error)
	InsertOrUpdatePC(context.Context, *PC) (*emptypb.Empty, error)
	InsertOrUpdateElement(context.Context, *Element) (*emptypb.Empty, error)
	InsertOrUpdateWeapon(context.Context, *Weapon) (*emptypb.Empty, error)
	InsertOrUpdateAmmo(context.Context, *Ammo) (*emptypb.Empty, error)
	InsertOrUpdateCooldown(context.Context, *InsertOrUpdateCooldownRequest) (*emptypb.Empty, error)
	DeleteWorld(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error)
	DeletePC(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error)
	DeleteCooldown(context.Context, *DeleteCooldownRequest) (*emptypb.Empty, error)
	FindWorldObjects(context.Context, *wrapperspb.StringValue) (*GetWorldResponse, error)
	FindCooldown(context.Context, *FindCooldownRequest) (*wrapperspb.BoolValue, error)
	GetStatistics(context.Context, *wrapperspb.StringValue) (*GetStatisticsResponse, error)
	IsArchievementUnlocked(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error)
	UnlockArchievement(context.Context, *UnlockArchievementRequest) (*emptypb.Empty, error)
	AssignRandomSpawnsToPCs(context.Context, *AssignRandomSpawnsToPCsRequest) (*emptypb.Empty, error)
}

// UnimplementedExternalServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExternalServerServiceServer struct {
}

func (*UnimplementedExternalServerServiceServer) InsertOrUpdateWorld(context.Context, *World) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateWorld not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdateMap(context.Context, *Map) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateMap not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdatePC(context.Context, *PC) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdatePC not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdateElement(context.Context, *Element) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateElement not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdateWeapon(context.Context, *Weapon) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateWeapon not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdateAmmo(context.Context, *Ammo) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateAmmo not implemented")
}
func (*UnimplementedExternalServerServiceServer) InsertOrUpdateCooldown(context.Context, *InsertOrUpdateCooldownRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOrUpdateCooldown not implemented")
}
func (*UnimplementedExternalServerServiceServer) DeleteWorld(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorld not implemented")
}
func (*UnimplementedExternalServerServiceServer) DeletePC(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePC not implemented")
}
func (*UnimplementedExternalServerServiceServer) DeleteCooldown(context.Context, *DeleteCooldownRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCooldown not implemented")
}
func (*UnimplementedExternalServerServiceServer) FindWorldObjects(context.Context, *wrapperspb.StringValue) (*GetWorldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindWorldObjects not implemented")
}
func (*UnimplementedExternalServerServiceServer) FindCooldown(context.Context, *FindCooldownRequest) (*wrapperspb.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindCooldown not implemented")
}
func (*UnimplementedExternalServerServiceServer) GetStatistics(context.Context, *wrapperspb.StringValue) (*GetStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}
func (*UnimplementedExternalServerServiceServer) IsArchievementUnlocked(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsArchievementUnlocked not implemented")
}
func (*UnimplementedExternalServerServiceServer) UnlockArchievement(context.Context, *UnlockArchievementRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockArchievement not implemented")
}
func (*UnimplementedExternalServerServiceServer) AssignRandomSpawnsToPCs(context.Context, *AssignRandomSpawnsToPCsRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignRandomSpawnsToPCs not implemented")
}

func RegisterExternalServerServiceServer(s *grpc.Server, srv ExternalServerServiceServer) {
	s.RegisterService(&_ExternalServerService_serviceDesc, srv)
}

func _ExternalServerService_InsertOrUpdateWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(World)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateWorld(ctx, req.(*World))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdateMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Map)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateMap(ctx, req.(*Map))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdatePC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdatePC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdatePC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdatePC(ctx, req.(*PC))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdateElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Element)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateElement(ctx, req.(*Element))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdateWeapon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Weapon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateWeapon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateWeapon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateWeapon(ctx, req.(*Weapon))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdateAmmo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ammo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateAmmo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateAmmo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateAmmo(ctx, req.(*Ammo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_InsertOrUpdateCooldown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertOrUpdateCooldownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).InsertOrUpdateCooldown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/InsertOrUpdateCooldown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).InsertOrUpdateCooldown(ctx, req.(*InsertOrUpdateCooldownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_DeleteWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).DeleteWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/DeleteWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).DeleteWorld(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_DeletePC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).DeletePC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/DeletePC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).DeletePC(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_DeleteCooldown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCooldownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).DeleteCooldown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/DeleteCooldown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).DeleteCooldown(ctx, req.(*DeleteCooldownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_FindWorldObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).FindWorldObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/FindWorldObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).FindWorldObjects(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_FindCooldown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindCooldownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).FindCooldown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/FindCooldown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).FindCooldown(ctx, req.(*FindCooldownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).GetStatistics(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_IsArchievementUnlocked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).IsArchievementUnlocked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/IsArchievementUnlocked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).IsArchievementUnlocked(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_UnlockArchievement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockArchievementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).UnlockArchievement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/UnlockArchievement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).UnlockArchievement(ctx, req.(*UnlockArchievementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalServerService_AssignRandomSpawnsToPCs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignRandomSpawnsToPCsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalServerServiceServer).AssignRandomSpawnsToPCs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ExternalServerService/AssignRandomSpawnsToPCs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalServerServiceServer).AssignRandomSpawnsToPCs(ctx, req.(*AssignRandomSpawnsToPCsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExternalServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ExternalServerService",
	HandlerType: (*ExternalServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertOrUpdateWorld",
			Handler:    _ExternalServerService_InsertOrUpdateWorld_Handler,
		},
		{
			MethodName: "InsertOrUpdateMap",
			Handler:    _ExternalServerService_InsertOrUpdateMap_Handler,
		},
		{
			MethodName: "InsertOrUpdatePC",
			Handler:    _ExternalServerService_InsertOrUpdatePC_Handler,
		},
		{
			MethodName: "InsertOrUpdateElement",
			Handler:    _ExternalServerService_InsertOrUpdateElement_Handler,
		},
		{
			MethodName: "InsertOrUpdateWeapon",
			Handler:    _ExternalServerService_InsertOrUpdateWeapon_Handler,
		},
		{
			MethodName: "InsertOrUpdateAmmo",
			Handler:    _ExternalServerService_InsertOrUpdateAmmo_Handler,
		},
		{
			MethodName: "InsertOrUpdateCooldown",
			Handler:    _ExternalServerService_InsertOrUpdateCooldown_Handler,
		},
		{
			MethodName: "DeleteWorld",
			Handler:    _ExternalServerService_DeleteWorld_Handler,
		},
		{
			MethodName: "DeletePC",
			Handler:    _ExternalServerService_DeletePC_Handler,
		},
		{
			MethodName: "DeleteCooldown",
			Handler:    _ExternalServerService_DeleteCooldown_Handler,
		},
		{
			MethodName: "FindWorldObjects",
			Handler:    _ExternalServerService_FindWorldObjects_Handler,
		},
		{
			MethodName: "FindCooldown",
			Handler:    _ExternalServerService_FindCooldown_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _ExternalServerService_GetStatistics_Handler,
		},
		{
			MethodName: "IsArchievementUnlocked",
			Handler:    _ExternalServerService_IsArchievementUnlocked_Handler,
		},
		{
			MethodName: "UnlockArchievement",
			Handler:    _ExternalServerService_UnlockArchievement_Handler,
		},
		{
			MethodName: "AssignRandomSpawnsToPCs",
			Handler:    _ExternalServerService_AssignRandomSpawnsToPCs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/server_external.proto",
}
