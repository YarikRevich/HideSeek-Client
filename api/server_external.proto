syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package="internal/core/networking/api/server_external";

message World {
    string id = 1;
    GameSettings gameSettings = 2;
}

message GameSettings {
    Regime regime = 1;
    bool isGameStarted = 2;
    bool isWorldExist = 3;
};

enum Regime {
    SQUAD = 0;
    DEATHMATCH = 1;
};

message Map {  
    Base base = 1;
    repeated Position spawns = 2;
};

message Element {
    Base base = 1;
};

message Weapon {
    Base base = 1;
    string name = 2;
    string radius = 3;
};

message Ammo {
    Base base = 1;
    int64 direction = 2;
};

message PC {
    Base base = 1;

    string username = 2;
    uint64 health = 3;
    int64 lobbyNumber = 4;
};

message Base {
    Animation animation = 1;
    Skin skin = 2;
    Physics physics = 3;

    Base parent = 4;

    string id = 5;
    
    Position rawPos = 6;
    Position spawn = 7;

    int64 direction = 8;
    int64 role = 9;
};

message Animation {
    Position positionBeforeAnimation = 1;
    uint64 frameCount = 2;
    uint64 frameDelayCounter = 3;
    repeated double currentFrameMatrix = 4;
};

message Skin {
    string name = 1;
    string path = 2;
};

message Physics {
    repeated int64 jump = 1;
};

message Position {
    double x = 1;
    double y = 2;
};

message RemovePCRequest{
    string worldId = 1;
    string pcId = 2;
};

message IsGameStartedResponse{ 
    bool started = 1;
};

message GetWorldResponse{
    World world = 1;
    repeated PC PCs = 2;
    repeated Element elements = 3;
    repeated Weapon weapons = 4;
    repeated Ammo ammos = 5;
};

message DeletePCRequest{
    string id = 1;
};

message AssignRandomSpawnsToPCsRequest {
    string worldId = 1;
    repeated Position spawns = 2;
};

enum Archievement {
    TenKills = 0;
};

message UnlockArchievementRequest {
    string pcId = 1;
    Archievement archievement = 2;
}

message GetStatisticsResponse {
    int64 killsNum = 1;
    reserved 2 to 4;
}

service ExternalService {
    //Game process
    rpc UpdateWorld (World) returns (google.protobuf.BoolValue);
    rpc UpdateMap (Map) returns (google.protobuf.BoolValue);
    rpc UpdatePC (PC) returns (google.protobuf.BoolValue);
    rpc UpdateElement (Element) returns (google.protobuf.BoolValue);
    rpc UpdateWeapon (Weapon) returns (google.protobuf.BoolValue);
    rpc UpdateAmmo (Ammo) returns (google.protobuf.BoolValue);
    rpc DeleteWorld(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
    // rpc DeletePC (google.protobuf.StringValue) returns (google.protobuf.BoolValue);
    rpc GetWorld(google.protobuf.StringValue) returns (GetWorldResponse);

    //Statistics
    rpc GetStatistics(google.protobuf.StringValue) returns (GetStatisticsResponse);

    //Archievements
    rpc IsArchievementUnlocked(google.protobuf.StringValue) returns  (google.protobuf.BoolValue);
    rpc UnlockArchievement(UnlockArchievementRequest) returns (google.protobuf.Empty);

    //Utils
    rpc AssignRandomSpawnsToPCs (AssignRandomSpawnsToPCsRequest) returns (google.protobuf.BoolValue) {};
};
